"pluggable" maps
----------------

If to.table(x1) (the right table for a direct map, the left table for a reverse
map) is the same as from.table(x2) (the left table for a direct map, the right
table for a reverse map), then x1 and x2 are "pluggable".
c(x1, x2), the result of the "plug" operation, is a map that goes from
from.table(x1) to to.table(x2).
But this would require to introduce a new class for representing
"undirected" maps because c(x1, x2) can't be considered directed
anymore (in general). An undirected map would have from/to slots
(fromTable, fromCol, toTable, toCol) instead of left/right slots
(leftTable, leftCol, rightTable, rightCol). Also the L2Rjoin slot
would need to be renamed to something like fromtoJoin.
If x1 and x2 are 2 "undirected" maps then all we need to do for
x <- c(x1, x2) is:
    x@fromTable <- x1@fromTable
    x@toTable <- x2@toTable
    x@fromtoJoin <- c(x1@fromtoJoin, x1@toTable, x2@fromtoJoin)
Note that this formula for combining the 2 fromtoJoin slots is really
simple thanks to the new format of this slot (see "The 'join' slot" section).

The class representing "undirected" maps would not be part of the current
AnnDbMap hierarchy. It could be called GenericMap or SimpleMap or something
like that, would behave close to current AtomicAnnDbMap (hence could be called
AtomicMap too) except that it's undirected (of course), doesn't
have left/right methods but from/to methods instead, and... (?)
Then we also need to be able to convert an AtomicAnnDbMap (or
RevAtomicAnnDbMap) object to a GenericMap object (no conversion
from GenericMap to AtomicAnnDbMap or RevAtomicAnnDbMap, once a map has lost
its direction, it's lost forever). Conversion from Go3AnnDbMap (or
RevGo3AnnDbMap) to GenericMap seems hard to achieve because of the
current DB schema where we have 3 right tables for those maps.

Of course, only maps that belong to the same package would be pluggable
this way (e.g. hgu95av2PATH2PROBE and hgu95av2ACCNUM, x1 is a reverse
map and x2 a direct map). So not only to.table(x1) and from.table(x2)
must be the same, but also the SQL connection ('conn' slot).

